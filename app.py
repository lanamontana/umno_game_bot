import os
import random
import logging
from flask import Flask, render_template, request, redirect, url_for, session, jsonify
from datetime import datetime

# Configure logging
logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)
app.secret_key = os.environ.get("SESSION_SECRET",
                                "fallback_secret_key_for_development")

# –í–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–≤ –ø–∞–º—è—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞)
QUESTIONS = {
    "smart": [
        "–ß—Ç–æ –±—ã —Ç—ã –∏–∑–º–µ–Ω–∏–ª –≤ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏, –µ—Å–ª–∏ –±—ã –∑–Ω–∞–ª, —á—Ç–æ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –Ω–µ –±—É–¥–µ—Ç?",
        "–ö–∞–∫–∞—è —Ç–≤–æ—è —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –º–µ—á—Ç–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –Ω–∏–∫–æ–º—É –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª?",
        "–û —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—å –ø–µ—Ä–µ–¥ —Å–Ω–æ–º?",
        "–ö–∞–∫–æ–π —É—Ä–æ–∫ –∂–∏–∑–Ω–∏ –¥–∞–ª—Å—è —Ç–µ–±–µ —Ç—Ä—É–¥–Ω–µ–µ –≤—Å–µ–≥–æ?",
        "–ß—Ç–æ –∑–Ω–∞—á–∏—Ç –¥–ª—è —Ç–µ–±—è –±—ã—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º?",
        "–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥ –ø—Ä–æ–∂–∏—Ç—å –æ–¥–∏–Ω –¥–µ–Ω—å –≤ –ø—Ä–æ—à–ª–æ–º, –∫–∞–∫–æ–π –±—ã —ç—Ç–æ –±—ã–ª –¥–µ–Ω—å?",
        "–ö–∞–∫–∞—è —Ç–≤–æ—è —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å–ª–∞–±–æ—Å—Ç—å?",
        "–ß—Ç–æ —Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ü–µ–Ω–∏—à—å –≤ –ª—é–¥—è—Ö?",
        "–ö–∞–∫–æ–π —Å–æ–≤–µ—Ç —Ç—ã –±—ã –¥–∞–ª —Å–≤–æ–µ–º—É –ø—Ä–æ—à–ª–æ–º—É '—è'?",
        "–ß—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±—è —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∂–∏–≤—ã–º?"
    ],
    "strange": [
        "–ï—Å–ª–∏ –±—ã —Ç—ã –±—ã–ª —Å—É–ø–µ—Ä–≥–µ—Ä–æ–µ–º, –∫–∞–∫–∞—è –±—ã–ª–∞ –±—ã —Ç–≤–æ—è —Å–∞–º–∞—è –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞—è —Å—É–ø–µ—Ä—Å–∏–ª–∞?",
        "–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å—Ç—Ä–∞–Ω–Ω—ã–π —Å–æ–Ω —Ç—ã –ø–æ–º–Ω–∏—à—å?",
        "–ï—Å–ª–∏ –±—ã –∂–∏–≤–æ—Ç–Ω—ã–µ –º–æ–≥–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å, —Å –∫–∞–∫–∏–º –∏–∑ –Ω–∏—Ö —Ç—ã –±—ã —Ç–æ—á–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å?",
        "–ö–∞–∫—É—é —Å–∞–º—É—é —Å—Ç—Ä–∞–Ω–Ω—É—é –µ–¥—É —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø—Ä–æ–±–æ–≤–∞–ª?",
        "–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥ –±—ã—Ç—å –ª—é–±—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º –≤ –¥–æ–º–µ, –∫–∞–∫–∏–º –±—ã —Ç—ã –±—ã–ª?",
        "–ö–∞–∫–∞—è —Å–∞–º–∞—è —Å—Ç—Ä–∞–Ω–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ —É —Ç–µ–±—è –±—ã–ª–∞ –≤ –¥–µ—Ç—Å—Ç–≤–µ?",
        "–ï—Å–ª–∏ –±—ã —Ç—ã –æ–∫–∞–∑–∞–ª—Å—è –≤ –ª–∏—Ñ—Ç–µ —Å –ø—Ä–∏–∑—Ä–∞–∫–æ–º, –æ —á–µ–º –±—ã –≤—ã –ø–æ–≥–æ–≤–æ—Ä–∏–ª–∏?",
        "–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å—Ç—Ä–∞–Ω–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø–æ–ª—É—á–∞–ª?",
        "–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥ –∏–∑–æ–±—Ä–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫, –∫–∞–∫–æ–π –±—ã —ç—Ç–æ –±—ã–ª –ø—Ä–∞–∑–¥–Ω–∏–∫?",
        "–ö–∞–∫–æ–µ —Å–∞–º–æ–µ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ —Ç—ã –∑–∞—Å—ã–ø–∞–ª?"
    ],
    "intimate": [
        "–ö–∞–∫–æ–µ —Å–∞–º–æ–µ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è, –æ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –º–µ—á—Ç–∞–µ—à—å?",
        "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –æ–∑–Ω–∞—á–∞–µ—Ç –±–ª–∏–∑–æ—Å—Ç—å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
        "–ö–∞–∫–æ–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø–æ–ª—É—á–∞—Ç—å?",
        "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –≤ –≥–ª–∞–∑–∞—Ö –¥—Ä—É–≥–∏—Ö?",
        "–ö–∞–∫–æ–π —Ç–≤–æ–π —è–∑—ã–∫ –ª—é–±–≤–∏?",
        "–ß—Ç–æ —Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ü–µ–Ω–∏—à—å –≤ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
        "–ö–∞–∫–æ–µ —Å–∞–º–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏ —Ç—ã —Å–ª—ã—à–∞–ª?",
        "–ß—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±—è —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∂–µ–ª–∞–Ω–Ω—ã–º?",
        "–ö–∞–∫–æ–π –º–æ–º–µ–Ω—Ç –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å–∞–º—ã–π –≤–æ–ª–Ω—É—é—â–∏–π –¥–ª—è —Ç–µ–±—è?",
        "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä —Å –ª—é–±–∏–º—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º?"
    ],
    "action": [
        "–ü–æ–∫–∞–∂–∏ —Å–≤–æ–π —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π —Ç–∞–Ω–µ—Ü",
        "–ò–∑–æ–±—Ä–∞–∑–∏ –ª—é–±–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, –∞ –ø–∞—Ä—Ç–Ω–µ—Ä –¥–æ–ª–∂–µ–Ω —É–≥–∞–¥–∞—Ç—å",
        "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –∏–ª–∏ —Å–º–µ—à–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é",
        "–ü–æ–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å, –∫–æ–≥–¥–∞ —Å–∏–ª—å–Ω–æ —É–¥–∏–≤–ª–µ–Ω",
        "–ò–∑–æ–±—Ä–∞–∑–∏ –∏–∑–≤–µ—Å—Ç–Ω—É—é –ª–∏—á–Ω–æ—Å—Ç—å", "–ü–æ–∫–∞–∂–∏ —Å–≤–æ–π —Ç–∞–ª–∞–Ω—Ç (–ª—é–±–æ–π)",
        "–°–¥–µ–ª–∞–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—É, –≥–æ–≤–æ—Ä—è —Ç–æ–ª—å–∫–æ —Ä–∏—Ñ–º–∞–º–∏",
        "–ü–æ–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã —Ç–∞–Ω—Ü—É–µ—à—å –ø–æ–¥ —Ä–∞–∑–Ω—É—é –º—É–∑—ã–∫—É",
        "–ò–∑–æ–±—Ä–∞–∑–∏ —ç–º–æ—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±–µ—Ä–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä",
        "–ü–æ–∫–∞–∂–∏ —Å–≤–æ–µ –∫–æ—Ä–æ–Ω–Ω–æ–µ —Å–µ–ª—Ñ–∏-–ª–∏—Ü–æ"
    ]
}

CATEGORY_NAMES = {
    "smart": "‚ô£Ô∏è —É–º–Ω–æ–µ",
    "strange": "‚ô¶Ô∏è —Å—Ç—Ä–∞–Ω–Ω–æ–µ",
    "intimate": "‚ô•Ô∏è –∏–Ω—Ç–∏–º–Ω–æ–µ",
    "action": "‚ô†Ô∏è –¥–µ–π—Å—Ç–≤–∏–µ"
}


@app.route('/')
def index():
    if 'chat_history' not in session:
        session['chat_history'] = []
    return render_template('index.html', chat_history=session['chat_history'])


@app.route('/start', methods=['POST'])
def start_game():
    if 'chat_history' not in session:
        session['chat_history'] = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    session['chat_history'].append({
        'type':
        'user',
        'message':
        '/start',
        'timestamp':
        datetime.now().strftime('%H:%M')
    })

    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞
    welcome_message = """–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è –ø–∞—Ä–Ω–æ–π –∏–≥—Ä—ã —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏!

–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–æ–≤:

‚ô£Ô∏è —É–º–Ω–æ–µ - –≥–ª—É–±–æ–∫–∏–µ –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
‚ô¶Ô∏è —Å—Ç—Ä–∞–Ω–Ω–æ–µ - –Ω–µ–æ–±—ã—á–Ω—ã–µ –∏ –∑–∞–±–∞–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã  
‚ô•Ô∏è –∏–Ω—Ç–∏–º–Ω–æ–µ - —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∏ –ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚ô†Ô∏è –¥–µ–π—Å—Ç–≤–∏–µ - –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω—É–∂–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π!"""

    session['chat_history'].append({
        'type':
        'bot',
        'message':
        welcome_message,
        'timestamp':
        datetime.now().strftime('%H:%M')
    })

    session.modified = True
    return redirect(url_for('index'))


@app.route('/question/<category>', methods=['POST'])
def get_question(category):
    if 'chat_history' not in session:
        session['chat_history'] = []

    if category not in QUESTIONS:
        return redirect(url_for('index'))

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    session['chat_history'].append({
        'type':
        'user',
        'message':
        CATEGORY_NAMES[category],
        'timestamp':
        datetime.now().strftime('%H:%M')
    })

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å
    question = random.choice(QUESTIONS[category])

    # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –æ—Ç –±–æ—Ç–∞
    session['chat_history'].append({
        'type':
        'bot',
        'message':
        f"üìù {question}",
        'timestamp':
        datetime.now().strftime('%H:%M')
    })

    session.modified = True
    return redirect(url_for('index'))


@app.route('/admin')
def admin():
    return render_template('admin.html', categories=CATEGORY_NAMES)


@app.route('/admin/add_question', methods=['POST'])
def add_question():
    category = request.form.get('category')
    question = request.form.get('question')

    if category in QUESTIONS and question:
        QUESTIONS[category].append(question.strip())
        return redirect(url_for('admin'))

    return redirect(url_for('admin'))


@app.route('/clear_chat', methods=['POST'])
def clear_chat():
    session['chat_history'] = []
    session.modified = True
    return redirect(url_for('index'))


@app.route("/category/<category>")
def category(category):
    if category in QUESTIONS:
        question = random.choice(QUESTIONS[category])
        return render_template('chat.html',
                               question=question,
                               category=category,
                               category_names=CATEGORY_NAMES)
    else:
        return render_template("chat.html", error="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


@app.route('/')
def intro():
    return render_template('intro.html')


@app.route('/menu')
def menu():
    return render_template('index.html', category_names=CATEGORY_NAMES)


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)


@app.route('/random_card')
def random_card():
    import random
    category = random.choice(list(QUESTIONS.keys()))
    question = random.choice(QUESTIONS[category])
    return render_template('chat.html',
                           question=question,
                           category=category,
                           category_names=CATEGORY_NAMES)
